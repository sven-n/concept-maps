@using ConceptMaps.UI.Data
@using System.Runtime.CompilerServices

@if (this.Context is null)
{
    return;
}

<div class="alert @this.AlertClass" role="alert">
    <InputTextArea class="form-control" @bind-Value="this.Context.Sentence" disabled="@(this.SentenceAnalyzer.IsAnalyzing || this.Context.State is SentenceState.Reviewed)" />
    <hr />
    <RelationsTable Relationships="@this.Context.Relationships" IsReadOnly="@(this.SentenceAnalyzer.IsAnalyzing || this.Context.State is SentenceState.Reviewed)"></RelationsTable>
    <hr />

    @if (this.Context.State is SentenceState.Processing)
    {
        <button type="button" class="btn btn-sm btn-outline-primary" disabled="@this.SentenceAnalyzer.IsAnalyzing">
            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
            <span class="sr-only">Analyzing ...</span>
        </button>
        <button type="button" class="btn btn-sm btn-outline-danger"
                aria-label="Cancel"
                @onclick="this.SentenceAnalyzer.Cancel">
            <span class="oi oi-media-stop"> Cancel</span>
        </button>
    }
    else if (this.Context.State is not (SentenceState.Reviewed or SentenceState.Removed))
    {
        <button type="button" class="btn btn-sm btn-outline-success btn-accept" aria-label="Accept" @onclick="OnAcceptClickAsync" disabled="@this.SentenceAnalyzer.IsAnalyzing">
            <span class="oi oi-check"> Accept</span>
        </button>
        <button type="button" class="btn btn-sm btn-outline-primary" @onclick="this.StartResolveSentence" disabled="@this.SentenceAnalyzer.IsAnalyzing">
            <span class="oi oi-media-play" role="status" aria-hidden="true"></span> Analyze
        </button>
        <button type="button" class="btn btn-sm btn-outline-danger btn-remove"
                aria-label="Remove" @onclick="OnRemoveClickAsync"
                disabled="@this.SentenceAnalyzer.IsAnalyzing">
            <span class="oi oi-trash"> Remove</span>
        </button>
    }
    @if (this.Context.State is SentenceState.Reviewed or SentenceState.Removed)
    {
        <button type="button" class="btn btn-sm btn-outline-primary btn-edit" aria-label="Edit" @onclick="OnEditClickAsync" disabled="@this.SentenceAnalyzer.IsAnalyzing">
            <span class="oi oi-pencil"> Edit</span>
        </button>
    }
    
    @if (this.Context.State is SentenceState.Processed
        && this.Context.LastException is not null)
    {
        <hr/>
        <p>
            <span>Last analyze Error: </span>
            <span>@this.Context.LastException.Message</span>
        </p>
    }

</div>