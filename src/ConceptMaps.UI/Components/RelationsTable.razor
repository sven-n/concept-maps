@using ConceptMaps.DataModel.Spacy
@using ConceptMaps.DataModel

<div class="alert alert-light" role="alert">
    <h6 class="alert-heading">Relationships:</h6>
    <table class="table table-striped table-borderless">
        <tbody>
        @foreach (var rel in this.Relationships)
        {
            <tr class="row justify-content-start">
                @if (!this.IsReadOnly)
                {
                    <td class="btn-group col-auto">
                        <button type="button" class="btn btn-sm btn-danger" aria-label="Remove" @onclick="() => this.Relationships.Remove(rel)">
                            <span class="oi oi-trash"></span>
                        </button>
                        <button type="button" class="btn btn-sm btn-secondary" title="Switch entities" @onclick="() => this.OnSwitchEntities(rel)"><span class="oi oi-transfer"></span></button>
                        
                        @if (rel.Score < 0.9)
                        {
                            <button type="button" class="btn btn-sm btn-outline-warning" title="@($"Score for {rel.RelationshipType}: {rel.Score}")">
                                <span class="btn oi oi-warning" ></span>
                                <span>@rel.Score.ToString("F2")</span>
                            </button>
                        }
                    </td>
                }
                <td class="col-3">
                    <InputText class="form-control form-control-sm" @bind-Value="rel.FirstEntity" placeholder="Enter Name" disabled="@this.IsReadOnly"></InputText>
                </td>
                    <td class="btn-group col-3">
                    
                    <InputSelect class="form-select form-select-sm" @bind-Value="@rel.RelationshipType" disabled="@this.IsReadOnly">
                                <option selected="@(rel.IsUndefined())" value="@SpacyRelationLabel.Undefined">@SpacyRelationLabel.GetDisplayName(SpacyRelationLabel.Undefined)</option>
                                <option selected="@(rel.IsSiblings())" value="@SpacyRelationLabel.Siblings">@SpacyRelationLabel.GetDisplayName(SpacyRelationLabel.Siblings)</option>
                                <option selected="@(rel.IsSpouse())" value="@SpacyRelationLabel.Spouse">@SpacyRelationLabel.GetDisplayName(SpacyRelationLabel.Spouse)</option>
                                <option selected="@(rel.IsChildren())" value="@SpacyRelationLabel.Children">@SpacyRelationLabel.GetDisplayName(SpacyRelationLabel.Children)</option>
                    </InputSelect>
                    @if (this.IsProbablyWrong(rel))
                    {
                        <span class="btn oi oi-warning" title="Expected: '@SpacyRelationLabel.GetDisplayName(GetExpectedRelationshipType(rel))' or '@SpacyRelationLabel.GetDisplayName(SpacyRelationLabel.Undefined)'"></span>
                    }
                    
                </td>
                <td class="col-3">
                    <InputText class="form-control form-control-sm" @bind-Value="rel.SecondEntity" placeholder="Enter Name" disabled="@this.IsReadOnly"></InputText>
                </td>
            </tr>
        }
        </tbody>
    </table>
    @if (!this.IsReadOnly)
    {
        <button type="button" class="btn btn-outline-primary" aria-label="Add Relationship" @onclick="this.OnAddRelationshipClick">
            <span class="oi oi-plus"> Add Relationship</span>
        </button>
    }
</div>